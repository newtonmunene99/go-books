// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// BooksColumns holds the columns for the "books" table.
	BooksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title", Type: field.TypeString},
		{Name: "author", Type: field.TypeString},
		{Name: "category_id", Type: field.TypeInt},
		{Name: "year", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
	}
	// BooksTable holds the schema information for the "books" table.
	BooksTable = &schema.Table{
		Name:       "books",
		Columns:    BooksColumns,
		PrimaryKey: []*schema.Column{BooksColumns[0]},
	}
	// CategoriesColumns holds the columns for the "categories" table.
	CategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
	}
	// CategoriesTable holds the schema information for the "categories" table.
	CategoriesTable = &schema.Table{
		Name:       "categories",
		Columns:    CategoriesColumns,
		PrimaryKey: []*schema.Column{CategoriesColumns[0]},
	}
	// CategoryBooksColumns holds the columns for the "category_books" table.
	CategoryBooksColumns = []*schema.Column{
		{Name: "category_id", Type: field.TypeInt},
		{Name: "book_id", Type: field.TypeInt},
	}
	// CategoryBooksTable holds the schema information for the "category_books" table.
	CategoryBooksTable = &schema.Table{
		Name:       "category_books",
		Columns:    CategoryBooksColumns,
		PrimaryKey: []*schema.Column{CategoryBooksColumns[0], CategoryBooksColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "category_books_category_id",
				Columns:    []*schema.Column{CategoryBooksColumns[0]},
				RefColumns: []*schema.Column{CategoriesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "category_books_book_id",
				Columns:    []*schema.Column{CategoryBooksColumns[1]},
				RefColumns: []*schema.Column{BooksColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		BooksTable,
		CategoriesTable,
		CategoryBooksTable,
	}
)

func init() {
	CategoryBooksTable.ForeignKeys[0].RefTable = CategoriesTable
	CategoryBooksTable.ForeignKeys[1].RefTable = BooksTable
}
